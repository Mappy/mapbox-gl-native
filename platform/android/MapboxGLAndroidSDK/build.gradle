apply plugin: 'com.android.library'

//mappy modif
//apply from: '../configuration.gradle'
//apply from: '../gradle/dependencies.gradle'
//end mappy modif

apply plugin: 'kotlin-android'
apply from: "../gradle/native-build.gradle"

//mappy modif
apply from: '../gradle/configuration.gradle'
apply from: '../gradle/dependencies.gradle'
//end mappy modif

print "project.VERSION_NAME: ${project.VERSION_NAME} \n"

dependencies {
    //    mappy modif
    // lintChecks project(":MapboxGLAndroidSDKLint")
    api(dependenciesList.mapboxAndroidTelemetry) {
        transitive = true
        exclude group: 'com.android.support', module: 'appcompat-v7'
    }
    //api dependenciesList.mapboxAndroidTelemetry
    api dependenciesList.mapboxJavaGeoJSON
    api dependenciesList.mapboxAndroidGestures
    implementation dependenciesList.mapboxJavaTurf
    implementation dependenciesList.supportAnnotations
    implementation dependenciesList.supportFragmentV4
    implementation dependenciesList.okhttp3
    implementation dependenciesList.soLoader
    testImplementation dependenciesList.junit
    testImplementation dependenciesList.mockito
    testImplementation dependenciesList.mockk
    testImplementation dependenciesList.robolectric
    testImplementation dependenciesList.kotlinLib
    testImplementation dependenciesList.commonsIO
}

android {
    compileSdkVersion androidVersions.compileSdkVersion

    defaultConfig {
        minSdkVersion androidVersions.minSdkVersion
        targetSdkVersion androidVersions.targetSdkVersion
        buildConfigField "String", "GIT_REVISION_SHORT", String.format("\"%s\"", getGitRevision())
        buildConfigField "String", "MAPBOX_SDK_IDENTIFIER", String.format("\"%s\"", "mapbox-maps-android")
        buildConfigField "String", "MAPBOX_SDK_VERSION", String.format("\"%s\"", project.VERSION_NAME)
        buildConfigField "String", "MAPBOX_VERSION_STRING", String.format("\"Mapbox/%s\"", project.VERSION_NAME)
        buildConfigField "String", "MAPBOX_EVENTS_USER_AGENT", String.format("\"mapbox-maps-android/%s\"", project.VERSION_NAME)
        consumerProguardFiles 'proguard-rules.pro'
    }

    // build native libraries
    List nativeTargets = ["mapbox-gl"]
    if (project.hasProperty("mapbox.with_test")) {
        nativeTargets.add("mbgl-test")
    }
    if (project.hasProperty("mapbox.with_benchmark")) {
        nativeTargets.add("mbgl-benchmark")
    }
    nativeBuild(nativeTargets)

    // avoid naming conflicts, force usage of prefix
    resourcePrefix 'mapbox_'

    sourceSets {
        // limit amount of exposed library resources
        main.res.srcDirs += 'src/main/res-public'
    }

    lintOptions {
        disable 'MissingTranslation', 'TypographyQuotes', 'ObsoleteLintCustomCheck', 'MissingPermission', 'WrongThreadInterprocedural'
        checkAllWarnings true
        warningsAsErrors false
    }

    testOptions {
        unitTests {
            returnDefaultValues true

            // Roboelectric 4.0 required config
            // http://robolectric.org/migrating/#migrating-to-40
            includeAndroidResources = true
        }
    }

    buildTypes {
        debug {
            testCoverageEnabled true
            jniDebuggable true
        }
        release {
            minifyEnabled false
            jniDebuggable false
        }
    }
}


def static getGitRevision() {
    def cmd = "git rev-parse --short HEAD"
    def proc = cmd.execute()
    def ref = proc.text.trim()
    return ref
}

configurations {
    all*.exclude group: 'commons-logging', module: 'commons-logging'
    all*.exclude group: 'commons-collections', module: 'commons-collections'
}

//mappy modif : ${rootDir} is ..
//apply from: "../gradle/gradle-javadoc.gradle"
//apply from: "../gradle/gradle-checkstyle.gradle"
apply from: "../gradle/gradle-dependencies-graph.gradle"
apply from: "../gradle/gradle-update-vendor-modules.gradle"
//apply from: "../gradle/android-nitpick.gradle"
//apply from: "${rootDir}/gradle/gradle-bintray.gradle"
apply from: "../gradle/gradle-publish.gradle" // bintray equivalent for mappy
//apply from: "${rootDir}/gradle/jacoco-report.gradle"
